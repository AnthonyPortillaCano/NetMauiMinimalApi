@using Models
@page "/EditProduct/{Id}"
@inject HttpClient Http
@inject Microsoft.Extensions.Configuration.IConfiguration config
@inject Microsoft.AspNetCore.Components.NavigationManager Navigation
<h3>Editar Producto</h3>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@product" OnValidSubmit="@(async()=> await UpdateProduct())">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="ProductName" class="control-label">Nombres</label>
                <input for="ProductName" class="form-control" @bind="@product.ProductName" />
            </div>
            <div class="form-group">
                <label for="Price" class="control-label">Precio</label>
                <input for="Price" class="form-control" @bind="@product.Price" />
            </div>
            <div class="form-group">
                <label for="ProductType" class="control-label">Tipo de Producto</label>
                <input for="ProductType" class="form-control" @bind="@product.ProductType" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Actualizar</button>
                <button class="btn btn-warning" @onclick="@cancel">Cancelar</button>
            </div>
        </EditForm>

    </div>
</div>
@code {
    [Parameter]
    public string Id { get; set; }
    Product product = new Product();
    protected override async Task OnInitializedAsync()
    {
        product = await Http.GetFromJsonAsync<Product>( "Api/Product/Detail/" + Convert.ToInt32(Id));
    }
    protected async Task UpdateProduct()
    {
        await Http.PutAsJsonAsync("Api/Product/Update", product);
        Navigation.NavigateTo("/products");
    }
    void cancel()
    {
        Navigation.NavigateTo("/products");
    }
}